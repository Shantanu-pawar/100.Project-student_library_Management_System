package com.Student_Library_Management.Models;

import com.Student_Library_Management.ENUMS.CardStatus;
import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

@Entity
@Table(name = "card")
@Getter
@Setter
public class Card {

    // we've to save this card into DB now, so i've to set it's attributes
    // set attributes who is not autoGenerated

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int cardNo;

    @CreationTimestamp // auto time-stamp real time entry will be created
    private Date createdOn;

    @UpdateTimestamp
    private Date updatedOn;

    @Enumerated(value = EnumType.STRING) // we've to pass the value here in string type in database
    private CardStatus cardStatus;


    // mapping : for student [as parent] - card [as child]
    @OneToOne
    @JoinColumn
    private Student student; // this student variable is used in parent Entity while doing bi-Directional mappings.


    // mapping : for book [as child] - card [as parent]
    @OneToMany(mappedBy = "card", cascade = CascadeType.ALL)

    List <Book> BooksIssued = new ArrayList<>(); // it's good practice to initialise list always [to avoid NULL POINTER exception]
    // springboot can handle this automatically but it's good practice to initilised the list

    public Card() {}

    public Card(int cardNo, Date createdOn, Date updatedOn, CardStatus cardStatus, Student student) {
        this.cardNo = cardNo;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
        this.cardStatus = cardStatus;
        this.student = student;
    }

}
